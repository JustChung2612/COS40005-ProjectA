// pages/adminPage/adminComp/roomStationList/RoomStationList.jsx
import React, { useMemo, useState } from 'react'
import OSCESPage from '../../../OsceStationPage/OsceStationPage.jsx'
import { stationById } from '../../../../data/stationsData.js'
import './roomstationlist.scss'

const RoomStationlist = ({ rooms = [] }) => {
  if (!rooms.length) {
    return <div>Ch∆∞a c√≥ ph√≤ng n√†o. H√£y nh·∫•n ‚ÄúT·∫°o Ph√≤ng‚Äù v√† ch·ªçn tr·∫°m.</div>
  }

  // L·∫•y ph√≤ng ƒë·∫ßu ti√™n (ƒë∆°n gi·∫£n)
  const room = rooms[0]
  const stationObjs = useMemo(
    () => room.stationIds.map(id => stationById[id]).filter(Boolean),
    [room.stationIds]
  )

  // viewMode: 'grid' (hi·ªÉn th·ªã card) | 'detail' (hi·ªÉn th·ªã duy nh·∫•t OSCESPage)
  const [viewMode, setViewMode] = useState('grid')
  const [idx, setIdx] = useState(null)

  const openStation = (i) => {
    setIdx(i)
    setViewMode('detail')
  }

  const handleBackToGrid = () => {
    setViewMode('grid')
    setIdx(null)
  }

  const handleNext = () => {
    if (idx === null) return
    setIdx(prev => (prev < stationObjs.length - 1 ? prev + 1 : prev))
  }

  if (!stationObjs.length) {
    return <div>Ph√≤ng n√†y ch∆∞a c√≥ tr·∫°m h·ª£p l·ªá.</div>
  }

  // ====== DETAIL MODE: ch·ªâ hi·ªÉn th·ªã OSCESPage + n√∫t quay l·∫°i ======
  if (viewMode === 'detail' && idx !== null) {
    return (
      <div className="roomDetailOnly">
        <button className="backBtn" type="button" onClick={handleBackToGrid}>
          ‚Üê Quay l·∫°i Danh S√°ch Ph√≤ng
        </button>

        <OSCESPage
          overrideStations={stationObjs}
          currentIndex={idx}
          onNext={handleNext}
        />
      </div>
    )
  }

  // ====== GRID MODE: hi·ªÉn th·ªã danh s√°ch card ======
  return (
    <div className="roomList">
      <h3>Danh S√°ch Ph√≤ng</h3>
      <p>
        Ph√≤ng: <strong>{room.id}</strong> ‚Ä¢ T·ªïng tr·∫°m: <strong>{stationObjs.length}</strong>
      </p>

      <div className="roomGrid">
        {stationObjs.map((s, i) => (
          <div
            key={s.tram_thi_ID}
            className="roomCard"
            role="button"
            tabIndex={0}
            onKeyDown={(e) => (e.key === 'Enter' ? openStation(i) : null)}
          >
            <div className="roomCardHeader">
              <span className="roomBadge">{s.metadata?.do_kho || '‚Äî'}</span>
            </div>
            <h4 className="roomTitle">{s.metadata?.chuan_doan || '‚Äî'}</h4>
            <div className="roomMeta">
              <div>ü´Å C∆° quan: <strong>{s.metadata?.co_quan || '‚Äî'}</strong></div>
              <div>üë§ ƒê·ªëi t∆∞·ª£ng: <strong>{s.metadata?.doi_tuong || '‚Äî'}</strong></div>
            </div>
            <button
              className="roomOpenBtn"
              type="button"
              onClick={() => openStation(i)}
            >
              Xem tr·∫°m
            </button>
          </div>
        ))}
      </div>
    </div>
  )
}

export default RoomStationlist
